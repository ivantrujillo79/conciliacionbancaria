///////////////////////////////////////////////////////////
//  Pagare.cs
//  Implementation of the Class Pagare
//  Generated by Enterprise Architect
//  Created on:      27-nov-2017 03:23:16 p.m.
//  Original author: Desarollo_Transforma
///////////////////////////////////////////////////////////
using Conciliacion.RunTime.DatosSQL;
using System;
using System.Collections.Generic;

namespace Conciliacion.RunTime.ReglasDeNegocio
{
	public abstract class Pagare : EmisorMensajes
    {
        private Conexion conexion;
		private int foliocorte;
		private DateTime foperacion;
		private int caja;
		private int consecutivo;
		private string descripcion;
		private decimal total;
		private string observaciones;
        private short anioped;
        private short celula;
        private int pedido;
        private int cobranza;
        private decimal saldo;
        private short gestioninicial;

        public Pagare(MensajesImplementacion implementadorMensajes)
        {
            this.conexion = null;
            this.FolioCorte = 0;
            this.FOperacion = DateTime.MinValue;
            this.Caja = 0;
            this.Consecutivo = 0;
            this.Descripcion = "";
            this.Total = 0;
            this.Observaciones = "";
            this.AnioPed = 0;
            this.Celula = 0;
            this.Pedido = 0;
            this.Cobranza = 0;
            this.Saldo = 0;
            this.GestionInicial = 0;
            this.ImplementadorMensajes = implementadorMensajes;
        }

        public Pagare(int foliocorte, DateTime foperacion, int caja, int consecutivo, string descripcion, decimal total, string observaciones, short anioPed, short celula, int pedido, int cobranza, decimal saldo, short gestioninicial, MensajesImplementacion implementadorMensajes)
        {
            this.foliocorte = foliocorte;
            this.foperacion = foperacion;
            this.caja = caja;
            this.consecutivo = consecutivo;
            this.descripcion = descripcion;
            this.total = total;
            this.observaciones = observaciones;
            this.anioped = anioPed;
            this.celula = celula;
            this.pedido = pedido;
            this.cobranza = cobranza;
            this.saldo = saldo;
            this.gestioninicial = gestioninicial;
            this.implementadorMensajes = implementadorMensajes;
        }

        //protected Pagare(MensajesImplementacion implementadorMensajes)
        //{
        //    this.implementadorMensajes = implementadorMensajes;
        //}

        public abstract List<Pagare> ConsultaPagares(Conexion _conexion, DateTime FechaFin, DateTime FechaIni);
        public abstract List<Pagare> CargaPagare(Conexion _conexion, sbyte Corporativo, sbyte Sucursal, DateTime FechaIni, DateTime FechaFin, string CuentaBanco);

        public abstract Pagare CrearObjeto();

        public virtual string CadenaConexion
        {
            get {
                Conciliacion.RunTime.App objApp = new Conciliacion.RunTime.App();
                return objApp.CadenaConexion;
            }
        }
        
		public int FolioCorte{
			get{ return foliocorte; }
			set{ foliocorte = value; }
		}

		public DateTime FOperacion{
			get{ return foperacion; }
			set{ foperacion = value; }
		}

		public int Caja{
			get{ return caja; }
			set{ caja = value; }
		}

		public int Consecutivo{
			get{ return consecutivo; }
			set{ consecutivo = value; }
		}

		public string Descripcion{
			get{ return descripcion; }
			set{ descripcion = value; }
		}

		public decimal Total{
			get{ return total; }
			set{ total = value; }
		}

		public string Observaciones{
			get{ return observaciones; }
			set{ observaciones = value; }
		}

        public short AnioPed {
            get { return anioped; }
            set { anioped = value; }
        }
        public short Celula {
            get { return celula; }
            set { celula = value; }
        }
        public int Pedido {
            get { return pedido; }
            set { pedido = value; }
        }
        public int Cobranza {
            get { return cobranza; }
            set { cobranza = value; }
        }
        public decimal Saldo {
            get { return saldo; }
            set { saldo = value; }
        }
        public short GestionInicial {
            get { return gestioninicial; }
            set { gestioninicial = value; }
        }

	}//end Pagare

}//end namespace Pagares